spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.datasource.url=jdbc:mysql://localhost:3306/trello_demo
spring.datasource.username=root
spring.datasource.password=astghik
spring.datasource.initialization-mode=always

redis.host=localhost
redis.port=6379


spring.mail.test-connection=true
spring.mail.host=smtp.gmail.com
spring.mail.port=587
<<<<<<< HEAD
spring.mail.username=astghikaramyan@gmail.com
spring.mail.password=password
=======
spring.mail.username=hro070890@gmail.com
spring.mail.password=
>>>>>>> 5f4712a003b5b828bfdc6080f0fa3cbc366286d0
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.debug=true


spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false

spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.role from users u inner join user_roles ur on(u.id=ur.user_id) inner join roles r on(ur.role_id=r.id) where u.email=?


#git fetch --all
#git reset --hard origin/master


# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
#spring.security.filter.order=-100 # Security filter chain order.
#spring.security.filter.dispatcher-types=async,error,request # Security filter chain dispatcher types.
#spring.security.user.name=user # Default user name.
#spring.security.user.password= # Password for the default user name.
#spring.security.user.roles= # Granted roles for the default user name.

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#spring.security.oauth2.client.provider.*= # OAuth provider details.
#spring.security.oauth2.client.registration.*= # OAuth client registrations.

# SECURITY OAUTH2 RESOURCE SERVER (OAuth2ResourceServerProperties)
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri= # JSON Web Key URI to use to verify the JWT token.
#spring.security.oauth2.resourceserver.jwt.issuer-uri= # URI that an OpenID Connect Provider asserts as its Issuer Identifier.